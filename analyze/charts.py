import os
import os.path as op
import glob

from django.http import HttpResponse

import numpy as np
import matplotlib.pyplot as plt
from PIL import Image

def get_gcv_err_plot(request):
    img = Image.open(op.join('/', 'code', 'plots', 
        'GCV_log_err_f0.png'))
    response = HttpResponse(content_type="image/png")
    img.save(response, "PNG")
    return response
    

def get_combined_images(request):
    ''' combines all plots generated by R into one image,
    returns it as an img/png response
    '''
    plot_list = list(glob.glob('/code/plots/*.png'))
    height, width, intensity = np.asarray(Image.open(plot_list[0]).convert('RGB')).shape
    grid_lam = sorted(list(set([int(pl.split('_')[1]) for pl in plot_list if op.split(pl)[-1].startswith('f0')])))
    grid_knots = sorted(list(set([int(pl.split('_')[3]) for pl in plot_list if op.split(pl)[-1].startswith('f0')])))
    nrows = len(grid_lam)
    ncols = len(grid_knots)
    image_list = []
    for lam in grid_lam:
        for knot in grid_knots:
            plot = next((pl for pl in plot_list if op.split(pl)[-1].startswith('f0')
                         and int(pl.split("_")[1])==lam and 
                         int(pl.split("_")[3])==knot), None)
            if plot:
                image = np.array(Image.open(plot).convert('RGB'))
            else:
                # paste white image
                image = np.zeros([height,width,3]).fill(255)
            image_list.append(image)
    result = np.array(image_list).reshape(
        nrows, ncols, height, width, intensity).swapaxes(
            1,2).reshape(
                height*nrows, width*ncols, intensity)
    img = Image.fromarray(result)
    for pl in plot_list:
        os.remove(pl)
    response = HttpResponse(content_type="image/png")
    img.save(response, "PNG")
    return response